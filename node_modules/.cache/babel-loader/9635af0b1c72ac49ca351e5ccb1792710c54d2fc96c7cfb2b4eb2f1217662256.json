{"ast":null,"code":"var _jsxFileName = \"/home/toto/Desktop/portfolio/src/components/NavBar.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport '../styles/navbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NavBar({\n  darkMode\n}) {\n  _s();\n  const [scrolled, setScrolled] = useState(false);\n\n  // Actualiza la clase del <body> al cambiar el modo\n  useEffect(() => {\n    document.body.classList.remove('dark', 'light');\n    document.body.classList.add(darkMode ? 'dark' : 'light');\n  }, [darkMode]);\n\n  // Detecta si se hizo scroll\n  useEffect(() => {\n    const handleScroll = () => {\n      setScrolled(window.scrollY > 20);\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n  const handleScrollTo = id => {\n    const section = document.getElementById(id);\n    if (section) {\n      section.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: `navbar ${scrolled ? 'shrink' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleScrollTo('skills'),\n      className: \"nav-link\",\n      children: \"> _Tech\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleScrollTo('projects'),\n      className: \"nav-link\",\n      children: \"> _Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleScrollTo('contact'),\n      className: \"nav-link\",\n      children: \"> _Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(NavBar, \"s+7IjVfEiC7t3AThbQRUqiQ3rrE=\");\n_c = NavBar;\nexport default NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","NavBar","darkMode","_s","scrolled","setScrolled","document","body","classList","remove","add","handleScroll","window","scrollY","addEventListener","removeEventListener","handleScrollTo","id","section","getElementById","scrollIntoView","behavior","block","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/toto/Desktop/portfolio/src/components/NavBar.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport '../styles/navbar.css';\n\nfunction NavBar({ darkMode }) {\n  const [scrolled, setScrolled] = useState(false);\n\n  // Actualiza la clase del <body> al cambiar el modo\n  useEffect(() => {\n    document.body.classList.remove('dark', 'light');\n    document.body.classList.add(darkMode ? 'dark' : 'light');\n  }, [darkMode]);\n\n  // Detecta si se hizo scroll\n  useEffect(() => {\n    const handleScroll = () => {\n      setScrolled(window.scrollY > 20);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const handleScrollTo = (id) => {\n    const section = document.getElementById(id);\n    if (section) {\n      section.scrollIntoView({ behavior: 'smooth', block: 'start' });\n    }\n  };\n\n  return (\n    <nav className={`navbar ${scrolled ? 'shrink' : ''}`}>\n      <button onClick={() => handleScrollTo('skills')} className=\"nav-link\">&gt; _Tech</button>\n      <button onClick={() => handleScrollTo('projects')} className=\"nav-link\">&gt; _Projects</button>\n      <button onClick={() => handleScrollTo('contact')} className=\"nav-link\">&gt; _Contact</button>\n    </nav>\n  );\n}\n\nexport default NavBar;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,MAAMA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACAD,SAAS,CAAC,MAAM;IACdS,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC;IAC/CH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,GAAG,CAACR,QAAQ,GAAG,MAAM,GAAG,OAAO,CAAC;EAC1D,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;;EAEd;EACAL,SAAS,CAAC,MAAM;IACd,MAAMc,YAAY,GAAGA,CAAA,KAAM;MACzBN,WAAW,CAACO,MAAM,CAACC,OAAO,GAAG,EAAE,CAAC;IAClC,CAAC;IAEDD,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,YAAY,CAAC;IAC/C,OAAO,MAAMC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,cAAc,GAAIC,EAAE,IAAK;IAC7B,MAAMC,OAAO,GAAGZ,QAAQ,CAACa,cAAc,CAACF,EAAE,CAAC;IAC3C,IAAIC,OAAO,EAAE;MACXA,OAAO,CAACE,cAAc,CAAC;QAAEC,QAAQ,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAQ,CAAC,CAAC;IAChE;EACF,CAAC;EAED,oBACEtB,OAAA;IAAKuB,SAAS,EAAE,UAAUnB,QAAQ,GAAG,QAAQ,GAAG,EAAE,EAAG;IAAAoB,QAAA,gBACnDxB,OAAA;MAAQyB,OAAO,EAAEA,CAAA,KAAMT,cAAc,CAAC,QAAQ,CAAE;MAACO,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzF7B,OAAA;MAAQyB,OAAO,EAAEA,CAAA,KAAMT,cAAc,CAAC,UAAU,CAAE;MAACO,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/F7B,OAAA;MAAQyB,OAAO,EAAEA,CAAA,KAAMT,cAAc,CAAC,SAAS,CAAE;MAACO,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1F,CAAC;AAEV;AAAC1B,EAAA,CAjCQF,MAAM;AAAA6B,EAAA,GAAN7B,MAAM;AAmCf,eAAeA,MAAM;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}